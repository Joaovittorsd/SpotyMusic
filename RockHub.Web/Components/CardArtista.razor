<MudCard>
    <MudCardMedia Image=@Imagem/>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@Artista!.Nome</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            @{
                string nomeDecodificado = HttpUtility.UrlEncode(Artista!.Nome);
            }
            <MudIconButton Icon="@Icons.Material.Filled.Settings"
                           Color="Color.Default"
                           Href=@($"/EditarArtista/{nomeDecodificado}") />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.body2" Title=@Artista!.Bio>@TruncateText(Artista!.Bio, 100)</MudText>
        <MudRating ReadOnly="true" SelectedValue="@Convert.ToInt32(Artista!.Classificacao)" />
    </MudCardContent>
    <MudCardContent>
        <div class="center-audio">
            <audio controls>
                <source src="audio/slipknot.mp3" type="audio/mpeg">
                Seu navegador não suporta a reprodução de áudio.
            </audio>
        </div>
    </MudCardContent>
    <MudCardActions>
        <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Default"/>
        <MudIconButton Icon="@Icons.Material.Filled.Album" Color="Color.Default" />
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public ArtistaResponse? Artista { get; set; }

    private string favoriteIconClass = "icon-favorite";

    public string? Imagem { get; set; }

    protected override void OnInitialized()
    {
        Imagem = Artista!.FotoPerfil!.Contains("Foto") ? $"https://localhost:7089/{Artista!.FotoPerfil}" : "images/cardArtista.png";
    }

    string TruncateText(string text, int maxLength)
    {
        if (text.Length > maxLength)
        {
            return text.Substring(0, maxLength) + "...";
        }
        return text;
    }
}

