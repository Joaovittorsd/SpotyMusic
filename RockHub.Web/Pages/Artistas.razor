@page "/Artistas"
@inject ArtistasAPI artistasAPI

@if (isLoading)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" Style="position: fixed; top: 50%; left: 50%;" />
}
else
{
    <MudStack Row="true" Justify="Justify.SpaceBetween">
        <MudText Class="mb-4" Typo="Typo.h4">Artistas</MudText>
        <MudPagination Count="@totalPaginas" SelectedChanged="PaginaMudou"></MudPagination>
    </MudStack>

    @if (artistasPorPagina is not null)
    {
        <MudGrid>
            @foreach (var artista in artistasPorPagina)
            {
                <MudItem xs="3">
                    <CardArtista Artista="artista" />
                </MudItem>
            }
        </MudGrid>
    }
}

@code {
    private ICollection<ArtistaResponse>? artistas;
    private int tamanho = 8;
    private int totalItens;
    private int totalPaginas;
    private ICollection<ArtistaResponse>? artistasPorPagina;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        artistas = await artistasAPI.GetArtistasAsync();

        if (artistas is not null)
        {
            artistas = artistas.OrderByDescending(a => a.Id).ToList();
            totalItens = artistas.Count();
            totalPaginas = Convert.ToInt32(Math.Ceiling((totalItens * 1.0) / tamanho));
            this.PaginaMudou(1);
        }

        isLoading = false;
    }

    private void PaginaMudou(int pageNumber)
    {
        var indice = pageNumber - 1;
        artistasPorPagina = artistas!
            .Skip(tamanho * indice)
            .Take(tamanho)
            .ToList();
    }
}
